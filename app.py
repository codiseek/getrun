import requests
from flask import Flask, render_template, request, Response, jsonify
from flask_cors import CORS

app = Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤

API_KEY = "ceb849cff8msh123f466bfb728a8p16578ajsn40f5d50ec450"
API_URL = "https://save-insta1.p.rapidapi.com/media"

headers = {
    "x-rapidapi-key": API_KEY,
    "x-rapidapi-host": "save-insta1.p.rapidapi.com",
    "Content-Type": "application/json",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∏–¥–µ–æ
def get_video_url(instagram_url):
    payload = {"url": instagram_url}
    try:
        print(f"üîç –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ API —Å URL: {instagram_url}")
        response = requests.post(API_URL, json=payload, headers=headers)
        response.raise_for_status()

        response_json = response.json()
        print(f"üìú API Response (JSON): {response_json}")  # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π JSON-–æ—Ç–≤–µ—Ç

        if response_json.get('success') and 'result' in response_json:
            video_url = response_json['result'][0]['urls'][0]['url']
            print(f"üéØ –ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: {video_url}")
            return video_url
        else:
            print("‚ö† –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.")
            return None
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def index():
    return render_template('index.html')

# –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
@app.route('/download', methods=['GET'])
def download_video():
    url = request.args.get('url')
    if not url:
        return jsonify({"error": "Please provide a valid URL"}), 400

    print(f"üì• –ü–æ–ª—É—á–µ–Ω–Ω—ã–π URL: {url}")

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ URL –∫ –µ–¥–∏–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
    url = url.replace("https://www.instagram.com/reels/", "https://www.instagram.com/reel/")
    url = url.replace("https://www.instagram.com/p/", "https://www.instagram.com/reel/")
    url = url.replace("https://www.instagram.com/share/reel/", "https://www.instagram.com/reel/")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å URL
    if not url.startswith("https://www.instagram.com/reel/"):
        return jsonify({"error": "Invalid Instagram Reels URL format"}), 400

    video_url = get_video_url(url)
    if not video_url:
        return jsonify({"error": "Failed to retrieve video URL"}), 500

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ –≤ –ø–æ—Ç–æ–∫–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        video_response = requests.get(video_url, stream=True)
        video_response.raise_for_status()

        print("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é...")
        return Response(
            video_response.iter_content(chunk_size=1024),
            content_type="video/mp4",
            status=200,
            headers={"Content-Disposition": "attachment; filename=video.mp4"}
        )
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ: {e}")
        return jsonify({"error": f"Failed to download video: {e}"}), 500

if __name__ == "__main__":
    app.run(debug=True)
